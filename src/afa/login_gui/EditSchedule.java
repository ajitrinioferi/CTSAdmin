/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package afa.login_gui;

import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author ajitrinioferi
 */
public class EditSchedule extends javax.swing.JFrame {

    /**
     * Creates new form EditDeteleSchedule
     */
    public EditSchedule() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        bg = new javax.swing.JPanel();
        MovieIDpanel = new javax.swing.JPanel();
        Label_title = new javax.swing.JLabel();
        ico_title = new javax.swing.JLabel();
        Label_ScheduleID = new javax.swing.JLabel();
        ComboBox_ScheduleID = new javax.swing.JComboBox<>();
        Label_MovieName = new javax.swing.JLabel();
        TextField_MovieName = new javax.swing.JTextField();
        Label_StudioName = new javax.swing.JLabel();
        TextField_StudioName = new javax.swing.JTextField();
        Label_MovieDate = new javax.swing.JLabel();
        TextField_MovieDate = new javax.swing.JTextField();
        Label_ShowTime = new javax.swing.JLabel();
        TextField_ShowTime = new javax.swing.JTextField();
        ico_Exit = new javax.swing.JLabel();
        ico_Back = new javax.swing.JLabel();
        Label_Copyright = new javax.swing.JLabel();
        Editpanel = new javax.swing.JPanel();
        btn_Edit = new javax.swing.JButton();
        Label_ExampleMD = new javax.swing.JLabel();
        Label_ExampleST = new javax.swing.JLabel();
        Label_SeatAvailable = new javax.swing.JLabel();
        TextField_SeatsAvailable = new javax.swing.JTextField();
        Label_SeatUnavailable = new javax.swing.JLabel();
        TextField_SeatsUnvailable = new javax.swing.JTextField();
        Label_Price = new javax.swing.JLabel();
        TextField_Price = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setLocation(new java.awt.Point(403, 152));
        setUndecorated(true);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        bg.setBackground(new java.awt.Color(0, 0, 0));
        bg.setMinimumSize(new java.awt.Dimension(670, 410));
        bg.setPreferredSize(new java.awt.Dimension(670, 410));
        bg.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        MovieIDpanel.setBackground(new java.awt.Color(0, 255, 51));
        MovieIDpanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        Label_title.setBackground(new java.awt.Color(204, 204, 204));
        Label_title.setFont(new java.awt.Font("Century Gothic", 0, 24)); // NOI18N
        Label_title.setForeground(new java.awt.Color(255, 255, 255));
        Label_title.setText("Movie Schedule");
        MovieIDpanel.add(Label_title, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 20, -1, 40));

        ico_title.setForeground(new java.awt.Color(255, 255, 255));
        ico_title.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        ico_title.setIcon(new javax.swing.ImageIcon(getClass().getResource("/atfxgone/icons8_schedule_127px_1.png"))); // NOI18N
        MovieIDpanel.add(ico_title, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, -20, 120, 120));

        bg.add(MovieIDpanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 11, 560, 78));

        Label_ScheduleID.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        Label_ScheduleID.setForeground(new java.awt.Color(255, 255, 255));
        Label_ScheduleID.setText("Schedule ID");
        bg.add(Label_ScheduleID, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 109, 90, 30));

        ComboBox_ScheduleID.setBackground(new java.awt.Color(0, 0, 0));
        ComboBox_ScheduleID.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        ComboBox_ScheduleID.setForeground(new java.awt.Color(255, 255, 255));
        ComboBox_ScheduleID.setMaximumRowCount(5);
        ComboBox_ScheduleID.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 0, 0, new java.awt.Color(0, 0, 0)));
        ComboBox_ScheduleID.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                ComboBox_ScheduleIDItemStateChanged(evt);
            }
        });
        bg.add(ComboBox_ScheduleID, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 110, 390, 30));

        Label_MovieName.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        Label_MovieName.setForeground(new java.awt.Color(255, 255, 255));
        Label_MovieName.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Label_MovieName.setText("Movie Name");
        bg.add(Label_MovieName, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 160, 240, -1));

        TextField_MovieName.setEditable(false);
        TextField_MovieName.setBackground(new java.awt.Color(0, 0, 0));
        TextField_MovieName.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        TextField_MovieName.setForeground(new java.awt.Color(255, 255, 255));
        TextField_MovieName.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        TextField_MovieName.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(255, 255, 255)));
        TextField_MovieName.setDisabledTextColor(new java.awt.Color(255, 255, 255));
        TextField_MovieName.setOpaque(false);
        bg.add(TextField_MovieName, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 180, 220, 30));

        Label_StudioName.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        Label_StudioName.setForeground(new java.awt.Color(255, 255, 255));
        Label_StudioName.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Label_StudioName.setText("Studio Name");
        bg.add(Label_StudioName, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 240, 240, -1));

        TextField_StudioName.setEditable(false);
        TextField_StudioName.setBackground(new java.awt.Color(0, 0, 0));
        TextField_StudioName.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        TextField_StudioName.setForeground(new java.awt.Color(255, 255, 255));
        TextField_StudioName.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        TextField_StudioName.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(255, 255, 255)));
        TextField_StudioName.setOpaque(false);
        bg.add(TextField_StudioName, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 260, 220, 30));

        Label_MovieDate.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        Label_MovieDate.setForeground(new java.awt.Color(255, 255, 255));
        Label_MovieDate.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Label_MovieDate.setText("Movie Date");
        bg.add(Label_MovieDate, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 160, 220, -1));

        TextField_MovieDate.setBackground(new java.awt.Color(0, 0, 0));
        TextField_MovieDate.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        TextField_MovieDate.setForeground(new java.awt.Color(255, 255, 255));
        TextField_MovieDate.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        TextField_MovieDate.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(255, 255, 255)));
        TextField_MovieDate.setDisabledTextColor(new java.awt.Color(255, 255, 255));
        TextField_MovieDate.setOpaque(false);
        bg.add(TextField_MovieDate, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 180, 220, 30));

        Label_ShowTime.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        Label_ShowTime.setForeground(new java.awt.Color(255, 255, 255));
        Label_ShowTime.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Label_ShowTime.setText("Show Time");
        bg.add(Label_ShowTime, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 240, 220, -1));

        TextField_ShowTime.setBackground(new java.awt.Color(0, 0, 0));
        TextField_ShowTime.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        TextField_ShowTime.setForeground(new java.awt.Color(255, 255, 255));
        TextField_ShowTime.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        TextField_ShowTime.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(255, 255, 255)));
        TextField_ShowTime.setOpaque(false);
        bg.add(TextField_ShowTime, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 260, 220, 30));

        ico_Exit.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        ico_Exit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/atfxgone/icons8_delete_30px.png"))); // NOI18N
        ico_Exit.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ico_ExitMouseClicked(evt);
            }
        });
        bg.add(ico_Exit, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 420, -1, -1));

        ico_Back.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        ico_Back.setIcon(new javax.swing.ImageIcon(getClass().getResource("/atfxgone/icons8_back_30px.png"))); // NOI18N
        ico_Back.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ico_BackMouseClicked(evt);
            }
        });
        bg.add(ico_Back, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 420, -1, -1));

        Label_Copyright.setBackground(new java.awt.Color(204, 204, 204));
        Label_Copyright.setFont(new java.awt.Font("Century Gothic", 0, 10)); // NOI18N
        Label_Copyright.setForeground(new java.awt.Color(204, 204, 204));
        Label_Copyright.setText("Developed by AFA Inc.");
        bg.add(Label_Copyright, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 420, 126, 30));

        Editpanel.setBackground(new java.awt.Color(0, 255, 51));
        Editpanel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                EditpanelMouseClicked(evt);
            }
        });

        btn_Edit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/atfxgone/icons8_pencil_52px.png"))); // NOI18N
        btn_Edit.setContentAreaFilled(false);

        javax.swing.GroupLayout EditpanelLayout = new javax.swing.GroupLayout(Editpanel);
        Editpanel.setLayout(EditpanelLayout);
        EditpanelLayout.setHorizontalGroup(
            EditpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, EditpanelLayout.createSequentialGroup()
                .addContainerGap(209, Short.MAX_VALUE)
                .addComponent(btn_Edit)
                .addGap(196, 196, 196))
        );
        EditpanelLayout.setVerticalGroup(
            EditpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, EditpanelLayout.createSequentialGroup()
                .addComponent(btn_Edit)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        bg.add(Editpanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 350, 490, 60));

        Label_ExampleMD.setFont(new java.awt.Font("Century Gothic", 0, 10)); // NOI18N
        Label_ExampleMD.setForeground(new java.awt.Color(153, 153, 153));
        Label_ExampleMD.setText("editable");
        bg.add(Label_ExampleMD, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 210, 220, -1));

        Label_ExampleST.setFont(new java.awt.Font("Century Gothic", 0, 10)); // NOI18N
        Label_ExampleST.setForeground(new java.awt.Color(153, 153, 153));
        Label_ExampleST.setText("editable");
        bg.add(Label_ExampleST, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 290, 220, -1));

        Label_SeatAvailable.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        Label_SeatAvailable.setForeground(new java.awt.Color(255, 255, 255));
        Label_SeatAvailable.setText("Seat Available");
        bg.add(Label_SeatAvailable, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 320, 110, -1));

        TextField_SeatsAvailable.setEditable(false);
        TextField_SeatsAvailable.setBackground(new java.awt.Color(0, 0, 0));
        TextField_SeatsAvailable.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        TextField_SeatsAvailable.setForeground(new java.awt.Color(255, 255, 255));
        TextField_SeatsAvailable.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        TextField_SeatsAvailable.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(255, 255, 255)));
        TextField_SeatsAvailable.setOpaque(false);
        bg.add(TextField_SeatsAvailable, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 310, 50, 30));

        Label_SeatUnavailable.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        Label_SeatUnavailable.setForeground(new java.awt.Color(255, 255, 255));
        Label_SeatUnavailable.setText("Seat Unavailable");
        bg.add(Label_SeatUnavailable, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 320, 130, -1));

        TextField_SeatsUnvailable.setEditable(false);
        TextField_SeatsUnvailable.setBackground(new java.awt.Color(0, 0, 0));
        TextField_SeatsUnvailable.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        TextField_SeatsUnvailable.setForeground(new java.awt.Color(255, 255, 255));
        TextField_SeatsUnvailable.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        TextField_SeatsUnvailable.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(255, 255, 255)));
        TextField_SeatsUnvailable.setOpaque(false);
        bg.add(TextField_SeatsUnvailable, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 310, 50, 30));

        Label_Price.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        Label_Price.setForeground(new java.awt.Color(255, 255, 255));
        Label_Price.setText("Price");
        bg.add(Label_Price, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 320, 40, -1));

        TextField_Price.setEditable(false);
        TextField_Price.setBackground(new java.awt.Color(0, 0, 0));
        TextField_Price.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        TextField_Price.setForeground(new java.awt.Color(255, 255, 255));
        TextField_Price.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        TextField_Price.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(255, 255, 255)));
        TextField_Price.setOpaque(false);
        bg.add(TextField_Price, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 310, 50, 30));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(bg, javax.swing.GroupLayout.PREFERRED_SIZE, 560, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(bg, javax.swing.GroupLayout.DEFAULT_SIZE, 465, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    private void UpdateForm() {
        try {

            // TODO add your handling code here:
            ComboBox_ScheduleID.removeAllItems();
            String qry = "SELECT * FROM `schedule`";
            ResultSet rs = AFAUtils.Select(qry);
            while (rs.next()) {
                ComboBox_ScheduleID.addItem(rs.getString("ScheduleID"));
            }
        } catch (SQLException ex) {
            Logger.getLogger(EditSchedule.class.getName()).log(Level.SEVERE, null, ex);
        }
        ComboBox_ScheduleID.setSelectedIndex(-1);
    }
    private void ico_ExitMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ico_ExitMouseClicked
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_ico_ExitMouseClicked

    private void ico_BackMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ico_BackMouseClicked
        // TODO add your handling code here:
        ScheduleMenu x = new ScheduleMenu();
        x.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_ico_BackMouseClicked

    private void EditpanelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_EditpanelMouseClicked
        // TODO add your handling code here:
        try {
            ResultSet rs;
            String string_moviedate = "";
            Date now = new Date();
            Date dateinput = new SimpleDateFormat("yyyy-MM-dd").parse(TextField_MovieDate.getText());
            String MovieID = "";
            String StudioID = "";
            String qry = "SELECT * FROM `movies` where Title = '" + (String) TextField_MovieName.getText() + "';";
            rs = AFAUtils.Select(qry);
            while (rs.next()) {
                MovieID = rs.getString("MovieID");
                string_moviedate = rs.getString("EndDate");
            }
            qry = "SELECT * FROM `studio` where Name = '" + (String) TextField_StudioName.getText() + "';";
            rs = AFAUtils.Select(qry);
            while (rs.next()) {
                StudioID = rs.getString("StudioID");
            }
            int Jumlah = -1;
            String qry1 = "SELECT\n"
                    + "COUNT(*) AS JUMLAH\n"
                    + "FROM\n"
                    + "studio_history\n"
                    + "WHERE\n"
                    + "'" + TextField_ShowTime.getText() + "' BETWEEN studio_history.Used AND studio_history.`Until` AND\n"
                    + "StudioID = '" + StudioID + "' AND\n"
                    + "Used = '" + TextField_MovieDate.getText() + "';";
            rs = AFAUtils.Select(qry1);
            while (rs.next()) {
                Jumlah = rs.getInt("JUMLAH");
            }
            Date moviedate = new SimpleDateFormat("yyyy-MM-dd").parse(string_moviedate);
            if (Jumlah == 0 && dateinput.after(now) && (dateinput.before(moviedate) || dateinput.equals(moviedate)) ) {
                String query = "update schedule set MovieID = ?, StudioID = ?, MovieDate = ?, Showtimes = ? WHERE ScheduleID = ? AND SeatsUnvailable = 0";
                PreparedStatement preparedStmt = AFAUtils.conn.prepareStatement(query);
                preparedStmt.setString(1, MovieID);
                preparedStmt.setString(2, StudioID);
                preparedStmt.setString(3, TextField_MovieDate.getText());
                preparedStmt.setString(4, TextField_ShowTime.getText());
                preparedStmt.setString(5, (String) ComboBox_ScheduleID.getSelectedItem());
                int affectedRow = preparedStmt.executeUpdate();
                if (affectedRow > 0) {
                    JOptionPane.showMessageDialog(null,
                            "Schedule Edited Successfuly!!",
                            "Success",
                            JOptionPane.INFORMATION_MESSAGE);
                    this.dispose();
                    EditSchedule x = new EditSchedule();
                    x.setVisible(true);
                    UpdateForm();
                }
            } else {
                JOptionPane.showMessageDialog(null,
                        "Schedule failed to edit!!",
                        "Failed",
                        JOptionPane.WARNING_MESSAGE);
            }
        } catch (SQLException ex) {
            Logger.getLogger(EditSchedule.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ParseException ex) {
            Logger.getLogger(EditSchedule.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_EditpanelMouseClicked

    private void ComboBox_ScheduleIDItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_ComboBox_ScheduleIDItemStateChanged
        // TODO add your handling code here:
        try {
            ResultSet rs2;
            String MovieName = "";
            String StudioName = "";
            String qry2;
            // TODO add your handling code here:
            String qry = "SELECT * FROM schedule WHERE ScheduleID = '" + (String) ComboBox_ScheduleID.getSelectedItem() + "';";
            ResultSet rs = AFAUtils.Select(qry);
            while (rs.next()) {     
                qry2 = "SELECT * FROM `movies` where MovieID = '"+rs.getString("MovieID")+"';";
                rs2 = AFAUtils.Select(qry2);
                while (rs2.next()) {
                    MovieName = rs2.getString("Title");
                }
                qry2 = "SELECT * FROM `studio` where StudioID = '"+rs.getString("StudioID")+"';";
                rs2 = AFAUtils.Select(qry2);
                while (rs2.next()) {
                    StudioName = rs2.getString("Name");
                }
                TextField_MovieName.setText(MovieName);
                TextField_StudioName.setText(StudioName);
                TextField_MovieDate.setText(rs.getString("MovieDate"));
                TextField_ShowTime.setText(rs.getString("Showtimes"));
                TextField_SeatsAvailable.setText(rs.getString("SeatsAvailable"));
                TextField_SeatsUnvailable.setText(rs.getString("SeatsUnvailable"));
                TextField_Price.setText(rs.getString("Price"));
            }
        } catch (SQLException ex) {
            Logger.getLogger(EditSchedule.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_ComboBox_ScheduleIDItemStateChanged

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // TODO add your handling code here:
        try {
            // TODO add your handling code here:
            String qry = "SELECT * FROM `schedule`";
            ResultSet rs = AFAUtils.Select(qry);
            while (rs.next()) {
                ComboBox_ScheduleID.addItem(rs.getString("ScheduleID"));
            }
        } catch (SQLException ex) {
            Logger.getLogger(EditSchedule.class.getName()).log(Level.SEVERE, null, ex);
        }
        ComboBox_ScheduleID.setSelectedIndex(-1);
        TextField_MovieName.setText("");
        TextField_MovieDate.setText("");
        TextField_Price.setText("");
        TextField_SeatsAvailable.setText("");
        TextField_SeatsUnvailable.setText("");
        TextField_ShowTime.setText("");
        TextField_StudioName.setText("");
        
    }//GEN-LAST:event_formWindowOpened

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(EditSchedule.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(EditSchedule.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(EditSchedule.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(EditSchedule.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new EditSchedule().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> ComboBox_ScheduleID;
    private javax.swing.JPanel Editpanel;
    public javax.swing.JLabel Label_Copyright;
    private javax.swing.JLabel Label_ExampleMD;
    private javax.swing.JLabel Label_ExampleST;
    private javax.swing.JLabel Label_MovieDate;
    private javax.swing.JLabel Label_MovieName;
    private javax.swing.JLabel Label_Price;
    private javax.swing.JLabel Label_ScheduleID;
    private javax.swing.JLabel Label_SeatAvailable;
    private javax.swing.JLabel Label_SeatUnavailable;
    private javax.swing.JLabel Label_ShowTime;
    private javax.swing.JLabel Label_StudioName;
    private javax.swing.JLabel Label_title;
    private javax.swing.JPanel MovieIDpanel;
    private javax.swing.JTextField TextField_MovieDate;
    private javax.swing.JTextField TextField_MovieName;
    private javax.swing.JTextField TextField_Price;
    private javax.swing.JTextField TextField_SeatsAvailable;
    private javax.swing.JTextField TextField_SeatsUnvailable;
    private javax.swing.JTextField TextField_ShowTime;
    private javax.swing.JTextField TextField_StudioName;
    private javax.swing.JPanel bg;
    private javax.swing.JButton btn_Edit;
    private javax.swing.JLabel ico_Back;
    private javax.swing.JLabel ico_Exit;
    private javax.swing.JLabel ico_title;
    // End of variables declaration//GEN-END:variables
}
